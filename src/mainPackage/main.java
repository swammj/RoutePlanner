package mainPackage;

import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author santunez
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ReadEntry = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ReadTxtEntry = new javax.swing.JTextArea();
        CalculateButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        routesTXT = new javax.swing.JTextArea();
        GenerateArchive = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        exitTXT = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ReadEntry.setText("Read Entry");
        ReadEntry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReadEntryMouseClicked(evt);
            }
        });

        ReadTxtEntry.setColumns(20);
        ReadTxtEntry.setRows(5);
        jScrollPane1.setViewportView(ReadTxtEntry);

        CalculateButton.setText("Calculate Routes");
        CalculateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CalculateButtonMouseClicked(evt);
            }
        });

        routesTXT.setColumns(20);
        routesTXT.setRows(5);
        jScrollPane2.setViewportView(routesTXT);

        GenerateArchive.setText("Generate Archive");
        GenerateArchive.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GenerateArchiveMouseClicked(evt);
            }
        });

        exitTXT.setColumns(20);
        exitTXT.setRows(5);
        jScrollPane3.setViewportView(exitTXT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ReadEntry)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CalculateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GenerateArchive)
                        .addGap(73, 73, 73))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReadEntry)
                    .addComponent(CalculateButton)
                    .addComponent(GenerateArchive))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ReadEntryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReadEntryMouseClicked
        // TODO add your handling code here:
        try {
            JFileChooser fileChoosed = new JFileChooser();
            fileChoosed.setCurrentDirectory(new File("./"));
            int valid = fileChoosed.showOpenDialog(this);
            if (valid == JFileChooser.APPROVE_OPTION) {
                coordinates = new ArrayList();
                currentFile = fileChoosed.getSelectedFile();
                FileReader fileRead = new FileReader(currentFile);
                BufferedReader bufferRead = new BufferedReader(fileRead);
                ReadTxtEntry.setText("");
                String line;
                int index = 1;
                while ((line = bufferRead.readLine()) != null) {
                    int store = index - 2;
                    switch (index) {
                        case 1:
                            PepsiCamiones = Integer.parseInt(line);//numero de camiones
                            break;
                        case 2: {
                            String[] Split = line.split(",");
                            int x = Integer.parseInt(Split[0]);
                            int y = Integer.parseInt(Split[1]);
                            XYCoordinates OriginCoordinate = new XYCoordinates(x, y);
                            origin = new Store("0", OriginCoordinate);// punto de partida
                            coordinates.add(OriginCoordinate);//se agreaga al array de coordinadas                        
                            break;
                        }
                        default: {
                            String[] split = line.split(",");
                            int x = Integer.parseInt(split[0]);
                            int y = Integer.parseInt(split[1]);
                            coordinates.add(new XYCoordinates(x, y));
                            break;
                        }
                    }
                    if (store >= 0) {
                        ReadTxtEntry.append(store + ".\t");
                    } else {
                        ReadTxtEntry.append("\t");
                    }

                    ReadTxtEntry.append(line);
                    ReadTxtEntry.append("\n");
                    index++;
                }
                stores = new ArrayList();
                for (int i = 0; i < coordinates.size(); i++) {//se agregan las demas tiendas
                    XYCoordinates currentCoordinate = coordinates.get(i);
                    Store stor = new Store(i + "", currentCoordinate);
                    stores.add(stor);
                }
            }
        } catch (HeadlessException | IOException | NumberFormatException e) {
        }
    }//GEN-LAST:event_ReadEntryMouseClicked


    private void CalculateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CalculateButtonMouseClicked
        // TODO add your handling code here:
        ArrayList<Store> Distances = new ArrayList();//array de las distances de cada store
        for (int i = 1; i < stores.size(); i++) {
            Store currentStore = stores.get(i);
            Double distance = getDistance(currentStore.position, origin.position);
            currentStore.distance = distance;
            Distances.add(currentStore);
        }
 
        for (int i = Distances.size() - 1; i >= 0; i--) {//
            for (int j = 0; j < i; j++) {
                if (Distances.get(j + 1).distance < Distances.get(j).distance) {// se van generando las distancias de menos a mayor.
                    Store temp = Distances.get(j + 1);
                    Distances.set(j + 1, Distances.get(j));
                    Distances.set(j, temp);
                }
            }
        }
        routes = new ArrayList();
        routesTXT.setText("");        
        for (int i = 0; i < PepsiCamiones; i++) {
            ArrayList<Store> route = new ArrayList();
            routesTXT.append("Ruta " + (i + 1) + ": ");
            double granTotal = 0;
            for (int j = 0; j < Distances.size(); j++) {
                if (j + i < Distances.size() && j % PepsiCamiones == 0) {
                    Store currentStore = Distances.get(i + j);
                    route.add(currentStore);
                    granTotal += currentStore.distance;
                }
            }
            if (route.size() > 0) { //despues del recorrido tiene que llegar al origen.
                granTotal += route.get(route.size() - 1).distance;
                route.add(origin);
            }
            routesTXT.append("\nDistancia Total: " + granTotal + "\n\n");
            routes.add(route);

        }

    }//GEN-LAST:event_CalculateButtonMouseClicked

    private void GenerateArchiveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GenerateArchiveMouseClicked
        // TODO add your handling code here:
        try {
            String content = "";
            File file = new File("./salida.txt");
            exitTXT.setText("");
            file.createNewFile();
            FileWriter fileWriter = new FileWriter(file.getAbsoluteFile());
            try (BufferedWriter bufferWriter = new BufferedWriter(fileWriter)) {
                for (int i = 0; i < routes.size(); i++) {
                    ArrayList<Store> route = routes.get(i);
                    exitTXT.append(route.size() + "\n");
                    content += route.size();
                    for (int j = 0; j < route.size(); j++) {
                        Store currentStore = route.get(j);
                        exitTXT.append(currentStore.index + " ");
                        content += currentStore.index;
                    }
                    exitTXT.append("\n");
                }
                bufferWriter.write(content);
                bufferWriter.flush();
            }
            JOptionPane.showMessageDialog(this, "¡El archivo fue generado con éxito!", "Aviso", JOptionPane.INFORMATION_MESSAGE);

        } catch (IOException e) {
        }

    }//GEN-LAST:event_GenerateArchiveMouseClicked

    public Double getDistance(XYCoordinates start, XYCoordinates end) {//se calcula la distancia entre las coordenadas
        return Math.sqrt(Math.pow(start.x - end.x, 2) + Math.pow(start.y - end.y, 2));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CalculateButton;
    private javax.swing.JButton GenerateArchive;
    private javax.swing.JButton ReadEntry;
    private javax.swing.JTextArea ReadTxtEntry;
    private javax.swing.JTextArea exitTXT;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea routesTXT;
    // End of variables declaration//GEN-END:variables
    File currentFile;
    int PepsiCamiones;
    Store origin;
    ArrayList<XYCoordinates> coordinates;
    ArrayList<Store> stores;
    ArrayList<ArrayList<Store>> routes;
}
